name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install poetry
        run: pip install poetry==1.0.5
      - name: Install nox
        run: pip install nox==2020.5.24
      - name: Run flake8
        run: nox -s lint

  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install poetry
        run: pip install poetry==1.0.5
      - name: Install nox
        run: pip install nox==2020.5.24
      - name: Run black
        run: nox -s format

  Typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install poetry
        run: pip install poetry==1.0.5
      - name: Install nox
        run: pip install nox==2020.5.24
      - name: Run mypy
        run: nox -s typecheck

  Test:
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install poetry
        run: pip install poetry==1.0.5
      - name: Install nox
        run: pip install nox==2020.5.24
      - name: Run pytest
        run: nox -s test-${{ matrix.python_version }}

  Docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install nox
        run: pip install nox==2020.5.24
      - name: Run sphinx-build
        run: nox -s docs

  Commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install npm
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install commitlint
        run: npm install -g @commitlint/cli @commitlint/config-conventional
      - name: Run commitlint
        run: commitlint --from=origin/master

  Release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [Lint, Format, Typecheck, Test, Docs, Commitlint]
    steps:
      - uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install poetry
        uses: snok/install-poetry@v1.1.1
        with:
          version: 1.1.4
      - name: Install toml-cli
        run: |
          pip install --upgrade pip
          pip install toml-cli==0.1.3
      - name: Install npm
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install semantic-release
        run: npm install -g semantic-release@17 @semantic-release/exec@5
      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: semantic-release
