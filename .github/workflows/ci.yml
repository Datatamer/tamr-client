name: CI

on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    branches:
      - master
      - release-*

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python
      uses: actions/setup-python@v1.1.1
      with:
        python-version: 3.6
    - name: Install poetry
      run: pip install poetry==1.0.5
    - name: Install nox
      run: pip install nox==2020.5.24
    - name: Run flake8
      run: nox -s lint
  
  Format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python
      uses: actions/setup-python@v1.1.1
      with:
        python-version: 3.6
    - name: Install poetry
      run: pip install poetry==1.0.5
    - name: Install nox
      run: pip install nox==2020.5.24
    - name: Run black
      run: nox -s format

  Typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python
      uses: actions/setup-python@v1.1.1
      with:
        python-version: 3.6
    - name: Install poetry
      run: pip install poetry==1.0.5
    - name: Install nox
      run: pip install nox==2020.5.24
    - name: Run mypy
      run: nox -s typecheck

  Test:
    strategy:
      matrix:
        python_version: [3.6, 3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install poetry
      run: pip install poetry==1.0.5
    - name: Install nox
      run: pip install nox==2020.5.24
    - name: Run pytest
      run: nox -s test-${{ matrix.python_version }}

  Docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install python
      uses: actions/setup-python@v1.1.1
      with:
        python-version: 3.6
    # RTD uses pip for managing dependencies, so we mirror that approach
    - name: Install dependencies
      run: |
        python -m pip install .
        python -m pip install -r docs/requirements.txt
    - name: Build docs
      run: TAMR_CLIENT_BETA=1 sphinx-build -b html docs docs/_build -W
